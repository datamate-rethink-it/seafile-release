name: Release on tag push

on:
  push:
    tags:
      - "v*.*.*"
      - "pre-v*.*.*"

jobs:
  init-vars:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_github_ref_version.outputs.version }}
      prerelease_bool: ${{ steps.set_prerelease.outputs.prerelease_bool }}
      git_tag_prefix: ${{ steps.extract_github_ref_prefix.outputs.git_tag_prefix }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Validate github.ref format in case of others triggers used
        id: validate_github_ref
        run: |
          if [[ ! "${{ github.ref }}" =~ ^refs/tags/(pre-|)v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid github.ref format"
            exit 1
          fi
      - name: Extract version from github.ref
        id: extract_github_ref_version
        run: echo "version=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -Fv '{print $2}')" >> $GITHUB_OUTPUT
      - name: Set git_tag_prefix to testing or release depending on git tag
        id: extract_github_ref_prefix
        run: echo "git_tag_prefix=$(echo ${{ github.ref }} | awk -F/ '{print $3}' | awk -Fv '{print $1}')" >> $GITHUB_OUTPUT
      - name: Set prerelease to true or false depending on git tag prefix
        id: set_prerelease
        run: |
          if [[ "${{ steps.extract_github_ref_prefix.outputs.git_tag_prefix }}" == "pre-" ]]; then
            echo "prerelease_bool=true" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.extract_github_ref_prefix.outputs.git_tag_prefix }}" == "" ]]; then
            echo "prerelease_bool=false" >> $GITHUB_OUTPUT
          fi

  validate-yml:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: vaildate yml files
        uses: mikefarah/yq@master
        with:
          cmd: yq 'true' compose/*.yml

  release-on-tag-push:
    runs-on: ubuntu-latest
    needs:
      - init-vars
      - validate-yml
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Compress content of compose folder
        run: tar -czvf seafile-compose.tar.gz -C compose/ .
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.init-vars.outputs.git_tag_prefix }}v${{ needs.init-vars.outputs.version }}
          files: |
            seafile-compose.tar.gz
          prerelease: ${{ needs.init-vars.outputs.prerelease_bool }}
