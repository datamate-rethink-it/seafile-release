---
services:
  seafile:
    image: ${SEAFILE_IMAGE:-docker.seadrive.org/seafileltd/seafile-pro-mc:11.0.11}
    restart: unless-stopped
    container_name: seafile-server
    environment:
      - DB_HOST=${DB_HOST:-mariadb}
      - DB_USER=${DB_USER:-root}
      - DB_ROOT_PASSWD=${MARIADB_ROOT_PASSWORD:?Variable is not set or empty}
      - TIME_ZONE=${TIME_ZONE}
      - SEAFILE_ADMIN_EMAIL=${SEAFILE_ADMIN_EMAIL:?Variable is not set or empty}
      - SEAFILE_ADMIN_PASSWORD=${SEAFILE_ADMIN_PASSWORD:?Variable is not set or empty}
      - SEAFILE_SERVER_HOSTNAME=${SEAFILE_SERVER_HOSTNAME}
      - SEAFILE_SERVER_LETSENCRYPT=false
      - SEAFILE__notification__jwt_private_key=${SEAFILE__notification__jwt_private_key:?Variable is not set or empty}
      - SEAFEVENTS__INDEX0x20FILES__es_host=${ELASTICSEARCH_HOST:-elasticsearch}
      - SEAHUB__SECRET_KEY=${SEAHUB__SECRET_KEY:?Variable is not set or empty}
      - SEAHUB__CACHE_HOST=${MEMCACHED_HOST:?Variable is not set or empty}
      - SEAFILE__storage__enable_storage_classes=true
      - SEAFILE__storage__storage_classes_file=/opt/seafile/seafile_storage_classes.json
      - SEAFILE__cluster__enabled=true
      - SEAFILE__memcached__memcached_options=--SERVER=${MEMCACHED_HOST:?Variable is not set or empty} --POOL-MIN=10 --POOL-MAX=100
      - FORCE_HTTPS_IN_CONF=true
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      # CLUSTER erg√§nzungen
      - CLUSTER_SERVER=true
      - CLUSTER_MODE=backend
    volumes:
      - /opt/seafile-server:/shared
      - type: bind
        source: "./seafile-license.txt"
        target: "/shared/seafile/seafile-license.txt"
        read_only: ${SEAFILE_LICENSE_FORCE_READ_ONLY:-false}
      - ./overrides/enterpoint.sh:/scripts/enterpoint.sh:ro
      - ./overrides/generate-config-files.py:/scripts/generate-config-files.py:ro
      - ./overrides/setup-databases.py:/scripts/setup-databases.py:ro
      - ./overrides/start.py:/scripts/start.py:ro
      - ./seafile_storage_classes.json:/opt/seafile/seafile_storage_classes.json:ro
    depends_on:
      - mariadb
      - memcached
      - elasticsearch
    networks:
      - frontend-net
      - backend-seafile-net
  # muss auf background angepasst werden...
  #    healthcheck:
  #      test: ["CMD-SHELL", "curl --fail http://localhost:8000 || exit 1"]
  #      interval: 20s
  #      retries: 3
  #      start_period: 30s
  #      timeout: 10s

  memcached:
    image: ${MEMCACHED_IMAGE:-memcached:1.6.27-bookworm}
    restart: unless-stopped
    container_name: seafile-memcached
    entrypoint: memcached -m 256
    networks:
      - backend-seafile-net
    ports:
      - "${NODE_PRIVATE_IP:?Variable is not set or empty}:11211:11211"
    healthcheck:
      test: ["CMD-SHELL", "timeout 2 bash -c '</dev/tcp/localhost/11211'"]
      interval: 20s
      retries: 3
      timeout: 5s

  elasticsearch:
    image: ${ELASTICSEARCH_IMAGE:-elasticsearch:8.6.2}
    restart: unless-stopped
    container_name: seafile-elasticsearch
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    volumes:
      - /opt/seafile-elasticsearch:/usr/share/elasticsearch/data
    networks:
      - backend-seafile-net
    ports:
      - "${NODE_PRIVATE_IP}:9200:9200"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 60s
      start_period: 60s
      timeout: 10s
      retries: 3

networks:
  frontend-net:
    name: frontend-net
  backend-seafile-net:
    name: backend-seafile-net
